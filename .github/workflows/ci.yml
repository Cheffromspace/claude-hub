name: CI Pipeline

on:
  push:
    branches: [ main ]

env:
  NODE_VERSION: '20'

jobs:
  # Main test suite for main branch
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'

    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit

    - name: Run linter
      run: npm run lint:check || echo "::warning::Linting issues found"

    - name: Check formatting
      run: npm run format:check || echo "::warning::Formatting issues found"

    - name: Run unit tests
      run: npm run test:unit
      env:
        NODE_ENV: test
        BOT_USERNAME: '@TestBot'
        GITHUB_WEBHOOK_SECRET: 'test-secret'
        GITHUB_TOKEN: 'test-token'

# Check removed as we now use direct fallback pattern
# to ensure consistent behavior between CI and PR workflows

    - name: Run integration tests
      run: npm run test:integration || echo "No integration tests found, skipping"
      env:
        NODE_ENV: test
        BOT_USERNAME: '@TestBot'
        GITHUB_WEBHOOK_SECRET: 'test-secret'
        GITHUB_TOKEN: 'test-token'

    - name: Run e2e tests
      run: npm run test:e2e
      env:
        NODE_ENV: test
        BOT_USERNAME: '@TestBot'
        GITHUB_WEBHOOK_SECRET: 'test-secret'
        GITHUB_TOKEN: 'test-token'

    - name: Generate test coverage
      run: npm run test:coverage
      env:
        NODE_ENV: test
        BOT_USERNAME: '@TestBot'
        GITHUB_WEBHOOK_SECRET: 'test-secret'
        GITHUB_TOKEN: 'test-token'

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      continue-on-error: true
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: intelligence-assist/claude-hub
        fail_ci_if_error: false

  # Security scans
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'

    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit

    - name: Run npm audit
      run: |
        npm audit --audit-level=moderate || {
          echo "::warning::npm audit found vulnerabilities"
          exit 0  # Don't fail the build, but warn
        }

    - name: Run security scan with Snyk
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high