name: CI Pipeline

on:
  push:
    branches: [ main ]

env:
  NODE_VERSION: '20'

jobs:
  # Main test suite for main branch
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'

    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit

    - name: Run linter
      run: npm run lint:check

    - name: Check formatting
      run: npm run format:check

    - name: Run unit tests
      run: npm run test:unit
      env:
        NODE_ENV: test
        BOT_USERNAME: '@TestBot'
        GITHUB_WEBHOOK_SECRET: 'test-secret'
        GITHUB_TOKEN: 'test-token'

    - name: Check for integration tests
      id: check-integration-tests
      run: |
        if grep -q '"test:integration"' package.json; then
          echo "Integration tests found in package.json"
          echo "has_integration_tests=true" >> $GITHUB_OUTPUT
        else
          echo "No integration tests found in package.json"
          echo "has_integration_tests=false" >> $GITHUB_OUTPUT
        fi

    - name: Run integration tests
      if: steps.check-integration-tests.outputs.has_integration_tests == 'true'
      run: npm run test:integration
      env:
        NODE_ENV: test
        BOT_USERNAME: '@TestBot'
        GITHUB_WEBHOOK_SECRET: 'test-secret'
        GITHUB_TOKEN: 'test-token'
        
    - name: Skip integration tests
      if: steps.check-integration-tests.outputs.has_integration_tests != 'true'
      run: echo "Integration tests script not found in package.json, skipping"

    - name: Run e2e tests
      run: npm run test:e2e
      env:
        NODE_ENV: test
        BOT_USERNAME: '@TestBot'
        GITHUB_WEBHOOK_SECRET: 'test-secret'
        GITHUB_TOKEN: 'test-token'

    - name: Generate test coverage
      run: npm run test:coverage
      env:
        NODE_ENV: test
        BOT_USERNAME: '@TestBot'
        GITHUB_WEBHOOK_SECRET: 'test-secret'
        GITHUB_TOKEN: 'test-token'

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      continue-on-error: true
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: intelligence-assist/claude-hub
        fail_ci_if_error: false

  # Security scans
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'

    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit

    - name: Run npm audit
      run: npm audit --audit-level=moderate

    - name: Run security scan with Snyk
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high